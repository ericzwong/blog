<%- partial('basic.ejs') %>
    <link href="/stylesheets/index.css" rel="stylesheet" type="text/css"/>
    <%- partial('nav.ejs') %>
    <div class="wz-page-article" id="page-article-container"></div>
    <%- partial('profile.ejs') %>
    <script type="text/javascript">

        window.addEventListener('popstate',function(event){
            $(document).trigger('needLoadPage');
        },false);

    </script>
    <script type="text/jsx">

        function formatTime(modify_time){

            var lastModifyTimeStr = "";
            var lastModifyTime = new Date(parseInt(modify_time) * 1000);
            var lastModifyTimeMonth = parseInt(lastModifyTime.getMonth()) + 1 < 10 ? "0" + (parseInt(lastModifyTime.getMonth()) + 1) : parseInt(lastModifyTime.getMonth()) + 1;
            var lastModifyTimeDay = lastModifyTime.getDate() < 10 ? "0" + lastModifyTime.getDate() : lastModifyTime.getDate();
            var lastModifyTimeHours = lastModifyTime.getHours() < 10 ? "0" + lastModifyTime.getHours() : lastModifyTime.getHours();
            var lastModifyTimeMinutes = lastModifyTime.getMinutes() < 10 ? "0" + lastModifyTime.getMinutes() : lastModifyTime.getMinutes();

            return lastModifyTimeStr = lastModifyTime.getFullYear() + "-" + lastModifyTimeMonth + "-" + lastModifyTimeDay;

        }

        var ArticleList = React.createClass({

            getInitialState: function(){

                //解析当前的URL获得Page
                var url = window.location.href;
                var page = 1;
                var match = [];

                if((match = /\/page\/(\d{1,})$/.exec(url))){
                    page = match[1];
                }

                return {
                    data: [],
                    page: page
                }
            },

            componentDidMount: function(){
                this.getData();

                var self = this;
                $(document).on('needLoadPage',function(event){
                    self.changePage(false);
                });
            },

            changePage: function(next){
                var page = parseInt(this.state.page);

                if(next){
                    page++;
                }else{
                    page > 1 ? page-- : 1;
                }

                this.setState({
                    page: page
                },function(){
                    this.getData();
                });

                return page;

            },

            getData: function(){

                    var self = this;
                    var url = "/ajax/article/all/page/" + this.state.page;
                    $.ajax(url,{

                        method: 'GET',
                        timeout: 5000,
                        dataType: "json"

                    }).complete(function(returnData,textStatus){
                        if(textStatus === "success"){

                            var articleData = returnData.responseJSON;
                            if(articleData['msg'] != "OK"){
                                return WZAlert().show(articleData['msg']);
                            }
                            //将scrollTop设置为顶部
                            $(window).scrollTop(0);
                            return self.setState({data:articleData['data']});

                        }else{

                            WZAlert().show(textStatus);
                        }
                    });
            },

            render: function(){


                var articles = this.state.data.map(function(item,index){
                    return (
                        <Article title={item['title']} content={item['container']} modifyTime={item['modify_time']}/>
                    );
                });

                return (
                    <div className="wz-page-article-list">
                        {articles}
                        <ArticleNav changePage={this.changePage}/>
                    </div>
                );
            }
        });

        var Article = React.createClass({
            render: function(){
                return (
                    <div className="simditor simditor-mac wz-article">
                        <div className="wz-article-modify-time">{formatTime(this.props.modifyTime)}</div>
                        <div className="wz-article-title">{this.props.title}</div>
                        <div className="wz-article-container simditor-body" dangerouslySetInnerHTML={{__html: this.props.content}}></div>
                    </div>
                );
            }
        });

        var ArticleNav = React.createClass({

            getInitialState: function(){
                    return {
                        page: 1
                    }
            },

            nextPage: function(event){
                event.preventDefault();

                var page = this.props.changePage(true);
                this.setState({page:page});
                window.history.pushState({"prevPage":page}, "next page", '/page/'+page);
            },

            prevPage: function(event){
                    event.preventDefault();

                    var page = this.props.changePage(false);
                    this.setState({page:page});
                    window.history.pushState({"prevPage":page}, "next page", '/page/'+page);

            },

            render: function(){
                return (
                    <div className="wz-page-article-nav">
                        {this.state.page > 1 && <a href="#" className="wz-page-article-nav-button" onClick={this.prevPage}>上一页</a>}
                        <a href="#" className="wz-page-article-nav-button" onClick={this.nextPage}>下一页</a>
                    </div>
                );
            }
        });

        var WZAlert = function(){
            return {
                show: function(reason){
                    alert(reason);
                }
            }
        };

        React.render(<ArticleList/>,$('#page-article-container')[0]);

    </script>
</body>
</html>
